<MCard Outlined MaxWidth="1024" Class="mx-auto">
    <MCardTitle>
        <MToolbar Dense Flat>
            <MTextField Label="SearchContent"
                        @bind-Value="@SearchContent"
                        Color="primary"
                        TValue="string"
                        Clearable
                        HideDetails="true"
                        AppendOuterIcon="mdi-magnify"
                        OnAppendOuterClick="()=>this.OnSearch()"
                        OnClearClick="()=>this.OnSearch()"
                        OnEnter="()=>this.OnSearch()">
            </MTextField>
            <MButton Icon OnClick="()=>this.OnReload()">
                <MIcon Color="orange darken-4">mdi-refresh</MIcon>
            </MButton>
            <MButton Icon Disabled>
                <MIcon Color="orange darken-4">mdi-cog-outline</MIcon>
            </MButton>
        </MToolbar>
    </MCardTitle>
    <MCardText>
        <UIDynamicHeight>
            <MVirtualScroll OverscanCount="2" ItemSize="64" Items="Core.ListSwitch_Search">
                <ItemContent>
                    <MListItem Dense>

                        <MListItemContent>
                            <MListItemTitle>
                                @context.DisplayName
                            </MListItemTitle>
                            <MListItemSubtitle>@context.DisplayDesc</MListItemSubtitle>

                        </MListItemContent>
                        <MListItemAction>
                            @if (context.ButtonType)
                            {
                                <MButton Icon
                                         Color="orange darken-4"
                                         Loading="@context.Loading"
                                         Disabled="context.Loading"
                                         OnClick="()=>OnChange(context)">
                                    <MIcon>mdi-crosshairs</MIcon>
                                </MButton>
                            }
                            else if (context.SelectsType)
                            {
                                <MSelect Dense HideDetails="true"
                                         TItem="GameValueInfoDTO"
                                         TItemValue="string"
                                         TValue="string"
                                         @bind-Value="@context.ContentValue"
                                         Items="context.SelectedContents"
                                         ItemText="p=>p.DisplayName"
                                         ItemValue="p=>p.DisplayValue"
                                         Color="orange darken-4"
                                         AppendOuterIcon="mdi-crosshairs"
                                         OnAppendOuterClick="()=>OnChange(context)"
                                         SingleLine></MSelect>

                            }
                            else if (context.SwitchesType)
                            {
                                <MSwitch Inset
                                         Color="orange darken-4"
                                         Loading="@context.Loading"
                                         Disabled="context.Loading"
                                         OnClick="()=>OnChange(context,true)"
                                         @bind-Value="@context.SwitchValue">
                                </MSwitch>
                            }
                            else if (context.TextEditorType)
                            {
                                <MTextField OnAppendOuterClick="()=>OnChange(context)"
                                            AppendOuterIcon="mdi-pencil-outline"
                                            Type="number"
                                            TValue="decimal"
                                            Loading="context.Loading"
                                            Disabled="context.Loading"
                                            Dense
                                            HideDetails="true"
                                            @bind-Value="@context.DecimalValue"
                                            NumberProps="@(prop => { prop.Min = 0; prop.Max = int.MaxValue; prop.Step =1; prop.HideControl= true; })" />

                            }
                            else
                            {
                                <MLabel>@context.ContentValue</MLabel>
                            }
                        </MListItemAction>
                    </MListItem>

                    <MDivider></MDivider>
                </ItemContent>
            </MVirtualScroll>
        </UIDynamicHeight>

    </MCardText>
</MCard>


